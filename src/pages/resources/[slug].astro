---
import { useSanityClient, groq } from "astro-sanity";
import imageUrlBuilder from "@sanity/image-url";
import Container from "@components/container.astro";
import Layout from "@layouts/Layout.astro";
import PortableText from '@components/PortableText.astro';

const builder = imageUrlBuilder(useSanityClient());
function urlFor(source) {
  return builder.image(source);
}

export async function getStaticPaths() {
  let brands = await useSanityClient().fetch(
    groq`*[_type == "brand"]{title, slug, description, mainImage, tags[]->, links[]->, body}`
  );
  const paths = brands.map((brand) => ({
    params: { slug: brand.slug.current },
    props: { brand },
  }));
  return paths;
}
const { brand } = Astro.props;
console.dir({brand}, {depth:null})
---

<Layout title="Resources">
  <Container>
    <main class="mt-24 mx-auto w-5/6 items-center flex">
      <div class="mx-auto flex flex-row space-x-20">
        <div class="w-2/3 flex flex-col">
          <h1 class="text-5xl font-black">{brand.title}</h1>
          <dir class="flex flex-row space-x-6">
            {
              brand.links &&
                brand.links.map(
                  (link) =>
                    link && (
                      <a class="inline-block" href={link?.url}>
                        <img class="w-4" src={urlFor(link.type.logo)} />
                      </a>
                    )
                )
            }
          </dir>
          <div>
            {
              brand.tags &&
                brand.tags
                  .filter((t) => t.title)
                  .map(
                    (tag) =>
                      tag && (
                        <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-xs text-gray-700 mr-2 mb-2">
                          #{tag.title}
                        </span>
                      )
                  )
            }
          </div>
          <div class="flex flex-col space-y-10 prose">
            <h2>Overview</h2>
            {brand.description}
            <h2>Description</h2>
            <PortableText portableText={brand.body}/>
          </div>
        </div>
        <div class="w-1/3 aspect-video object-fit">
          <img src={urlFor(brand?.mainImage)} />
        </div>
      </div>
    </main>
  </Container>
</Layout>
