---
import { useSanityClient, groq } from "astro-sanity";
import Container from "@components/container.astro";
import Layout from "@layouts/Layout.astro";
import PortableText from '@components/PortableText.astro';

import { urlForImage } from "@utils/urlForImage";

export async function getStaticPaths() {
  let brands = await useSanityClient().fetch(
    groq`*[_type == "brand"]{title, slug, description, 'image':mainImage, 'stars':rating, tags[]->, links[]->{url, type->}, body}`
  );
  brands = brands.map(brand=>({...brand, image:{src:brand.image?urlForImage(brand.image):'', alt:brand.title}}))
  const paths = brands.map((brand) => ({
    params: { slug: brand.slug.current },
    props: { brand },
  }));
  return paths;
}
const { brand } = Astro.props;
---

<Layout title={brand.title}>
  <Container>
    <main class="flex items-center w-5/6 mx-auto mt-24">
      <div class="flex flex-row mx-auto space-x-20">
        <div class="flex flex-col w-2/3 space-y-4">
          <h1 class="text-5xl font-black">{brand.title}</h1>
          <div class="flex flex-row px-6 space-x-4">
            {
              brand.links &&
                brand.links.map(
                  (link) =>
                    link && (
                      <a class="" href={link.url} title={link.url} target="_blank">
                        <img class="w-6" src={link.type.logo?urlForImage(link.type.logo):''} />
                      </a>
                    )
                )
            }
          </div>
          <div
            class="flex flex-wrap items-center justify-between px-6 sm:flex-row">
            {
              brand.tags &&
                brand.tags
                  .filter((t) => t.title)
                  .map(
                    (tag, index) =>
                      tag && (
                        <div
                          tabindex={index}
                          aria-label="gray border badge"
                          class="flex items-center justify-center h-6 px-4 mb-4 bg-indigo-700 rounded-full ocus:outline-none md:mb-0">
                          <span class="text-xs font-normal text-white dark:text-gray-100">
                            #{tag.title}
                          </span>
                        </div>
                      )
                  )
            }
          </div>
          <div class="flex flex-col pt-8 space-y-10 prose">
            <h3>{brand.description}</h3>
            <PortableText portableText={brand.body}/>
          </div>
        </div>
        <div class="w-1/3 aspect-video object-fit">
          <img src={brand.image.src} alt={brand.image.alt} />
        </div>
      </div>
    </main>
  </Container>
</Layout>
